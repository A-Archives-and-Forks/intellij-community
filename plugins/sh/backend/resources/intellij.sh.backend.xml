<idea-plugin>
  <dependencies>
    <module name="intellij.sh.core"/>
    <module name="intellij.platform.backend"/>
    <module name="intellij.spellchecker"/>
  </dependencies>

  <resource-bundle>messages.ShBundle</resource-bundle>

  <extensionPoints>
    <extensionPoint qualifiedName="com.intellij.runMarkerContributionAdditionalCondition"
                    interface="com.intellij.sh.run.ShRunnerAdditionalCondition"
                    dynamic="true"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <applicationService serviceInterface="com.intellij.sh.codeInsight.ShPsiReferenceSupport"
                        serviceImplementation="com.intellij.sh.backend.codeInsight.ShBackendPsiReferenceSupport" />
    <applicationService serviceInterface="com.intellij.sh.formatter.ShFormatterDownloader"
                        serviceImplementation="com.intellij.sh.backend.formatter.ShBackendFormatterDownloader" />

    <psi.referenceContributor language="Shell Script" implementation="com.intellij.sh.backend.ShUrlReferenceContributor"/>
    <lang.psiStructureViewFactory language="Shell Script" implementationClass="com.intellij.sh.backend.ShStructureViewFactory"/>
    <lang.findUsagesProvider language="Shell Script" implementationClass="com.intellij.sh.backend.codeInsight.ShFindUsagesProvider"/>
    <lang.documentationProvider language="Shell Script" implementationClass="com.intellij.sh.backend.ShDocumentationProvider"/>
    <targetElementEvaluator language="Shell Script" implementationClass="com.intellij.sh.backend.codeInsight.ShTargetElementEvaluator"/>
    <configurationType implementation="com.intellij.sh.run.ShConfigurationType"/>
    <runConfigurationProducer implementation="com.intellij.sh.backend.run.ShRunConfigurationProducer"/>
    <programRunner implementation="com.intellij.sh.backend.run.ShRunProgramRunner"/>
    <runConfigurationBeforeRunProviderDelegate implementation="com.intellij.sh.run.ShBeforeRunProviderDelegate"/>
    <runLineMarkerContributor language="" implementationClass="com.intellij.sh.backend.run.ShRunLineMarkerContributor"/>
    <spellchecker.support language="Shell Script" implementationClass="com.intellij.sh.backend.spellchecker.ShSpellcheckingStrategy"/>
    <editorNotificationProvider implementation="com.intellij.sh.backend.shellcheck.ShellcheckSetupNotificationProvider"/>
    <formattingService implementation="com.intellij.sh.backend.formatter.ShExternalFormatter"/>
    <fileDocumentManagerListener implementation="com.intellij.sh.backend.formatter.ShLineEndingsAdapter"/>
    <externalAnnotator language="Shell Script" implementationClass="com.intellij.sh.backend.shellcheck.ShShellcheckExternalAnnotator"/>
    <localInspection language="Shell Script" shortName="ShellCheck" enabledByDefault="true"
                     bundle="messages.ShBundle" groupKey="sh.shell.script" key="display.name.shell.check"
                     level="ERROR" unfair="true" implementationClass="com.intellij.sh.backend.shellcheck.ShShellcheckInspection"/>
    <virtualFileCustomDataProvider implementation="com.intellij.sh.frontend.split.codeStyle.ShCodeStyleSettingsCustomDataSynchronizer"/>
    <completion.contributor id="shShebang" language="Shell Script"
                            implementationClass="com.intellij.sh.backend.completion.ShShebangCompletionContributor"
                            order="first"/>
    <completion.contributor id="shFilePathCompletionContributor" language="Shell Script"
                            implementationClass="com.intellij.sh.backend.completion.ShFilePathCompletionContributor"
                            order="after shShebang"/>
    <completion.contributor id="shCommand" language="Shell Script"
                            implementationClass="com.intellij.sh.backend.completion.ShCommandCompletionContributor"
                            order="after shFilePathCompletionContributor"/>
    <completion.contributor language="Shell Script"
                            implementationClass="com.intellij.sh.backend.completion.ShKeywordCompletionContributor"
                            order="after shCommand"/>
    <intentionAction>
      <language>Shell Script</language>
      <className>com.intellij.sh.backend.ShExplainShellIntention</className>
      <bundleName>messages.ShBundle</bundleName>
      <categoryKey>intention.shell.script</categoryKey>
    </intentionAction>
  </extensions>

  <actions>
    <action id="runShellFileAction" class="com.intellij.sh.backend.run.ShRunFileAction" use-shortcut-of="RunClass"/>
  </actions>
</idea-plugin>
