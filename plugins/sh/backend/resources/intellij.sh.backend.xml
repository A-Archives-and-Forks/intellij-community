<idea-plugin>
  <dependencies>
    <module name="intellij.sh.core"/>
    <module name="intellij.platform.backend"/>
    <module name="intellij.spellchecker"/>
  </dependencies>

  <resource-bundle>messages.ShBundle</resource-bundle>

  <extensionPoints>
    <extensionPoint qualifiedName="com.intellij.runMarkerContributionAdditionalCondition"
                    interface="com.intellij.sh.run.ShRunnerAdditionalCondition"
                    dynamic="true"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <applicationService serviceInterface="com.intellij.sh.codeInsight.ShPsiReferenceSupport"
                        serviceImplementation="com.intellij.sh.backend.codeInsight.ShBackendPsiReferenceSupport" />

    <lang.findUsagesProvider language="Shell Script" implementationClass="com.intellij.sh.backend.codeInsight.ShFindUsagesProvider"/>
    <targetElementEvaluator language="Shell Script" implementationClass="com.intellij.sh.backend.codeInsight.ShTargetElementEvaluator"/>
    <configurationType implementation="com.intellij.sh.run.ShConfigurationType"/>
    <runConfigurationProducer implementation="com.intellij.sh.backend.run.ShRunConfigurationProducer"/>
    <programRunner implementation="com.intellij.sh.backend.run.ShRunProgramRunner"/>
    <runConfigurationBeforeRunProviderDelegate implementation="com.intellij.sh.run.ShBeforeRunProviderDelegate"/>
    <runLineMarkerContributor language="" implementationClass="com.intellij.sh.backend.run.ShRunLineMarkerContributor"/>
    <spellchecker.support language="Shell Script" implementationClass="com.intellij.sh.backend.spellchecker.ShSpellcheckingStrategy"/>
    <externalAnnotator language="Shell Script" implementationClass="com.intellij.sh.backend.shellcheck.ShShellcheckExternalAnnotator"/>
    <localInspection language="Shell Script" shortName="ShellCheck" enabledByDefault="true"
                     bundle="messages.ShBundle" groupKey="sh.shell.script" key="display.name.shell.check"
                     level="ERROR" unfair="true" implementationClass="com.intellij.sh.backend.shellcheck.ShShellcheckInspection"/>
  </extensions>

  <actions>
    <action id="runShellFileAction" class="com.intellij.sh.backend.run.ShRunFileAction" use-shortcut-of="RunClass"/>
  </actions>
</idea-plugin>
